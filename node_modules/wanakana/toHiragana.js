'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _constants = require('./constants');

var _katakanaToHiragana = require('./utils/katakanaToHiragana');

var _katakanaToHiragana2 = _interopRequireDefault(_katakanaToHiragana);

var _romajiToHiragana = require('./utils/romajiToHiragana');

var _romajiToHiragana2 = _interopRequireDefault(_romajiToHiragana);

var _isRomaji = require('./isRomaji');

var _isRomaji2 = _interopRequireDefault(_isRomaji);

var _isMixed = require('./isMixed');

var _isMixed2 = _interopRequireDefault(_isMixed);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Convert input to [Hiragana](https://en.wikipedia.org/wiki/Hiragana)
 * @param  {String} [input=''] text
 * @param  {DefaultOptions} [options=defaultOptions]
 * @return {String} converted text
 * @example
 * toHiragana('toukyou, オオサカ')
 * // => 'とうきょう、　おおさか'
 * toHiragana('only カナ', { passRomaji: true })
 * // => 'only かな'
 * toHiragana('wi')
 * // => 'うぃ'
 * toHiragana('wi', { useObsoleteKana: true })
 * // => 'ゐ'
*/
function toHiragana() {
  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var config = Object.assign({}, _constants.DEFAULT_OPTIONS, options);
  if (config.passRomaji) return (0, _katakanaToHiragana2.default)(input);
  if ((0, _isRomaji2.default)(input)) return (0, _romajiToHiragana2.default)(input, config);
  if ((0, _isMixed2.default)(input, { passKanji: true })) {
    var romaji = (0, _katakanaToHiragana2.default)(input);
    return (0, _romajiToHiragana2.default)(romaji, config);
  }
  return (0, _katakanaToHiragana2.default)(input);
}

exports.default = toHiragana;